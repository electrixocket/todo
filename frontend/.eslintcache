[{"/home/sechang/python/djangoprac/todobase/frontend/src/index.js":"1","/home/sechang/python/djangoprac/todobase/frontend/src/App.js":"2","/home/sechang/python/djangoprac/todobase/frontend/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610045208000,"results":"4","hashOfConfig":"5"},{"size":6089,"mtime":1610069330000,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610045208000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1akymxk",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/sechang/python/djangoprac/todobase/frontend/src/index.js",[],["16","17"],"/home/sechang/python/djangoprac/todobase/frontend/src/App.js",["18","19","20","21"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n// import { render } from '@testing-library/react';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: '',\n        completed: false,\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)//binding\n    this.handleSubmit = this.handleSubmit.bind(this)//binding\n    this.getCookie = this.getCookie.bind(this)//binding\n    this.startEdit = this.startEdit.bind(this)//binding\n    this.deleteItem = this.deleteItem.bind(this)//binding\n    this.strikeUnstrike = this.strikeUnstrike.bind(this)\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  componentWillMount() {\n    this.fetchTasks()\n  }\n\n  // making api calls and populating data.\n  fetchTasks() {\n    console.log('Fetching...')\n    fetch(`http://127.0.0.1:8000/api/task-list/`)\n      .then(response => response.json())\n      .then(data =>\n        // console.log('Data:', data)\n        this.setState({\n          todoList: data\n        })\n      )\n  }\n  //litens to the textfield\n  handleChange(e) {\n    var name = e.target.name\n    var value = e.target.value\n    console.log('Name:', name)\n    console.log('Value:', value)\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    console.log('ITEM', this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = `http://127.0.0.1:8000/api/task-create/`\n\n    if (this.state.editing == true) {\n      var url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing: false\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          completed: false,\n        }\n      })\n    }).catch(function (error) {\n      console.log('ERROR:', error)\n    })\n\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task) {\n    var csrftoken = this.getCookie('csrftoken')\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n    }).then((response) => {\n      this.fetchTasks()\n    })\n\n  }\n\n  strikeUnstrike(task) {\n    task.completed = !task.completed\n\n    var csrftoken = this.getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}/`\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({ 'completed': task.completed, 'title': task.title })\n    }).then(() => {\n      this.fetchTasks()\n    })\n    console.log('TASK: ', task.completed)\n  }\n\n  render() {\n    var tasks = this.state.todoList\n    var self = this\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          {/* form */}\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task...\" />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n          {/* list */}\n          <div id=\"list-wrapper\">\n            {/* TODO try to add error:ww function version  */}\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={() => self.strikeUnstrike(task)} style={{ flex: 7 }}>\n                    {task.completed == false ? (\n                      <span>{task.title}</span>\n                    ) : (\n                        <strike>{task.title}</strike>\n                      )}\n                  </div>\n\n                  <div style={{ flex: 1 }}>\n                    <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n\n                  <div style={{ flex: 1 }}>\n                    <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                  </div>\n\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/home/sechang/python/djangoprac/todobase/frontend/src/reportWebVitals.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"31","line":103,"column":28,"nodeType":"32","messageId":"33","endLine":103,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":104,"column":11,"nodeType":"28","messageId":"36","endLine":104,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":197,"column":37,"nodeType":"32","messageId":"33","endLine":197,"endColumn":39},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'url' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]